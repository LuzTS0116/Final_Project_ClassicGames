{"version":3,"sources":["script-tictactoe.js"],"names":["window","addEventListener","tiles","Array","from","document","querySelectorAll","playerDisplay","querySelector","resetButton","announcer","board","currentPlayer","isGameActive","PLAYERX_WON","PLAYERO_WON","TIE","winningConditions","isValidAction","tile","innerText","updateBoard","index","changePlayer","classList","remove","add","announce","type","innerHTML","handleResultValidation","roundWon","i","winCondition","a","b","c","includes","userAction","forEach","resetBoard"],"mappings":"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","sourcesContent":["//TIC TAC TOE GAME//\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    const tiles = Array.from(document.querySelectorAll('.tile'));\r\n    const playerDisplay = document.querySelector('.display-player');\r\n    const resetButton = document.querySelector('#reset');\r\n    const announcer = document.querySelector('.announcer');\r\n\r\n    let board = ['', '', '', '', '', '', '', '', ''];\r\n    let currentPlayer = 'X';\r\n    let isGameActive = true;\r\n\r\n    const PLAYERX_WON = 'PLAYERX_WON';\r\n    const PLAYERO_WON = 'PLAYERO_WON';\r\n    const TIE = 'TIE';\r\n\r\n    const winningConditions = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n     ];\r\n\r\n    const isValidAction = (tile) => {\r\n        if (tile.innerText === 'X' || tile.innerText === 'O'){\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n    };\r\n\r\n    const updateBoard =  (index) => {\r\n        board[index] = currentPlayer;\r\n    }\r\n\r\n    const changePlayer = () => {\r\n        playerDisplay.classList.remove(`player${currentPlayer}`);\r\n        currentPlayer = currentPlayer === 'X' ? 'O' : 'X';\r\n        playerDisplay.innerText = currentPlayer;\r\n        playerDisplay.classList.add(`player${currentPlayer}`);\r\n    }\r\n\r\n    const announce = (type) => {\r\n        switch(type){\r\n           case PLAYERO_WON:\r\n                announcer.innerHTML = 'Player <span class=\"playerO\">O</span> Won';\r\n                break;\r\n           case PLAYERX_WON:\r\n                announcer.innerHTML = 'Player <span class=\"playerX\">X</span> Won';\r\n                break;\r\n           case TIE:\r\n                announcer.innerText = 'Tie';\r\n            }\r\n        announcer.classList.remove('hide');\r\n    };\r\n\r\n    function handleResultValidation() {\r\n        let roundWon = false;\r\n        for (let i = 0; i <= 7; i++) {\r\n          const winCondition = winningConditions[i];\r\n          const a = board[winCondition[0]];\r\n          const b = board[winCondition[1]];\r\n          const c = board[winCondition[2]];\r\n          if (a === \"\" || b === \"\" || c === \"\") {\r\n            continue;\r\n          }\r\n          if (a === b && b === c) {\r\n            roundWon = true;\r\n            break;\r\n          }\r\n        }\r\n      \r\n        if (roundWon) {\r\n          announce(currentPlayer === \"X\" ? PLAYERX_WON : PLAYERO_WON);\r\n          isGameActive = false;\r\n          return;\r\n        }\r\n      \r\n        if (!board.includes(\"\")) announce(TIE);\r\n      }\r\n\r\n      const userAction = (tile, index) => {\r\n        if (isValidAction(tile) && isGameActive) {\r\n          tile.innerText = currentPlayer;\r\n          tile.classList.add(`player${currentPlayer}`);\r\n          updateBoard(index);\r\n          handleResultValidation();\r\n          changePlayer();\r\n        }\r\n      };\r\n\r\n    tiles.forEach( (tile, index) => {\r\n        tile.addEventListener('click', () => userAction(tile, index));\r\n    });\r\n\r\n    const resetBoard = () => {\r\n        board = ['', '', '', '', '', '', '', '', ''];\r\n        isGameActive = true;\r\n        announcer.classList.add('hide');\r\n    \r\n        if (currentPlayer === 'O') {\r\n            changePlayer();\r\n        }\r\n    \r\n        tiles.forEach(tile => {\r\n            tile.innerText = '';\r\n            tile.classList.remove('playerX');\r\n            tile.classList.remove('playerO');\r\n        });\r\n    }\r\n\r\n    resetButton.addEventListener('click', resetBoard);\r\n\r\n  });"],"file":"script-tictactoe.dev.js"}